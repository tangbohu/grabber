#!/usr/bin/python
# -*- coding: utf-8 -*- 
"""dong fang cai fu wang"""
import  fetchWeb 
from web import Web
from BeautifulSoup import BeautifulSoup
import urllib2
import sys
import chardet
import time
import datetime
from info import Info




class zcw(Web):
    def __init__(self,dic):
         Web.__init__(self,dic)
         self.url='http://stock.cfi.cn/BCA0A4127A4346A4439.html'
         self.soup=None
         self.fromweb="中财网公司速递"
         print 'zcw init ok'
             
    def readWeb(self,url):
       html=urllib2.urlopen(url).read()
       localcode= sys.getfilesystemencoding()      # local encode format  
       
       #print html
       return BeautifulSoup(html)

    def getChildSoup(self,link):
      #  print '--------------------------------------------------------','\n'
        childSoup=self.readWeb(link)
        #print childSoup
       # print '--------------------------------------------------------','\n'
        return childSoup  
  
    def searchTag(self,strinfo):

          result=[]
          for key in self.searchdict:
             print 'searching ',key
             if(strinfo.find(key)!=-1):
                print 'find ',key
	        result.append(key)
	     else:
                 pass
         # print result
	  return  result



    def linkAnalysis(self,link):
        temp=link.findAll("a")
        print temp[0].string
        dat=link.findAll("span")
        print dat[0].string
        i=0
        
        for da in dat:
           # print 'da is',da.string,'\n'
            strtemp=da.string
            if strtemp.find(':')==-1:
                # print 'no :'
                 return
            else:
               # print 'find :'
                address='http://stock.cfi.cn/'+temp[i]["href"]
                brief=temp[i].string
                t=time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time()))

           #     print t
                truetime=t[0:11]+strtemp+':59'
             #   print truetime
                now= time.strptime(truetime, '%Y-%m-%d %H:%M:%S')
                if time.mktime(now)<time.mktime(self.updateTime):
                  # print 'has no latest news'
                   return
                else :
                   # print 'find latest news'             
                    print 'link address is : ',address 
                    print 'link content is :', brief 
       
		childSoup=self.getChildSoup(address)      
		newsContent=childSoup.find(attrs={"id":"tdcontent"})
		#print newsContent

		stringTemp=""
		if not newsContent:
		    return 
		for content in newsContent:
		    stringTemp+=str(content)
	#        print stringTemp
	#        print searchdict
		tags=self.searchTag(stringTemp)
	       # print 'tags is ',tags
		if tags:
		       newin=Info()
		       newin.addLink(address,brief)
		       for tag  in tags:
		          newin.addTag(tag)
		          print newin
		          print 'in this news find ',tag
		       self.addInfo(newin)
		       print 'useful info'
		else:
		       print 'useless info'
		print '------------------------- one link analysis end ','------------------'
                i+=1

        

    def collectInfo(self):
        self.clearInfo()
        self.soup=self.readWeb(self.url)
        #print self.soup
        temptime=time.localtime()
        print 'starting learning from ',self.url
        linkVector=self.soup.findAll(attrs={"class":"xinwen"})
 #       print linkVector[0]
#        for link in linkVector:
 #           if not self.linkAnalysis(link):
  #               break
        self.linkAnalysis(linkVector[0])          

        self.updateTime=temptime
        print 'update done'
    

        

if __name__=='__main__':
    search=['平安','招商']
    a=zcw(search)
    a.collectInfo()
    
    
